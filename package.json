{
  "name": "@soundws/audio-waveform-service",
  "license": "AGPL-3.0-or-later",
  "version": "3.0.1-beta.8",
  "description": "A serverless microservice to generate waveform data from a audio file",
  "author": "The First Coders Team (https://www.firstcoders.co.uk)",
  "email": "support@firstcoders.co.uk",
  "bugs": "https://github.com/sound-ws/audio-waveform-service/issues",
  "homepage": "https://github.com/sound-ws/audio-waveform-service",
  "contributors": [
    {
      "name": "Mark Cremer",
      "email": "mark@firstcoders.co.uk",
      "url": "http://www.firstcoders.co.uk"
    }
  ],
  "publishConfig": {
    "registry": "https://registry.npmjs.org/",
    "access": "public"
  },
  "directories": {
    "test": "test",
    "example": "examples"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sound-ws/audio-waveform-service.git"
  },
  "files": [
    "src",
    "dist"
  ],
  "keywords": [
    "serverless",
    "AWS SAM",
    "waveform"
  ],
  "engines": {
    "node": ">=18"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.441.0",
    "@soundws/service-libs": "^1.3.1-beta.5",
    "axios": "^0.26.0"
  },
  "devDependencies": {
    "@babel/core": "^7.22.20",
    "@babel/eslint-parser": "^7.22.15",
    "@babel/preset-env": "^7.22.20",
    "array-normalize": "^2.0.0",
    "babel-jest": "^29.7.0",
    "esbuild": "^0.19.4",
    "esbuild-plugin-license": "^1.2.2",
    "eslint": "^8.50.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-jest": "^27.4.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.7.0",
    "lint-staged": "^14.0.1",
    "prettier": "^3.0.3"
  },
  "scripts": {
    "test": "jest tests/",
    "build": "sam build && npm run build:licenses",
    "build:licenses": "node build/3rd-party-licenses.mjs",
    "qa": "eslint \"src/**/*.js\" && sam validate --lint",
    "precommit": "lint-staged",
    "prepublishOnly": "npm run build",
    "prepack": "rm -rf dist/ && mkdir -p dist/aws-sam && cp -R .aws-sam/build dist/aws-sam",
    "sam:publish": "npm run build && sam package --template-file .aws-sam/build/template.yaml --output-template-file .aws-sam/build/packaged.yaml --s3-bucket $AWS_SAM_PACKAGE_BUCKET_NAME --region $AWS_REGION && sam publish --template .aws-sam/build/packaged.yaml --region $AWS_REGION --semantic-version $npm_package_version"
  }
}
